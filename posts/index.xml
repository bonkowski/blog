<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Bonkowski.net</title>
    <link>https://bonkowski.net/posts/</link>
    <description>Recent content in Posts on Bonkowski.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Apr 2020 15:47:40 +0200</lastBuildDate><atom:link href="https://bonkowski.net/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOS Azure Pipeline</title>
      <link>https://bonkowski.net/posts/ios-azure-pipeline/</link>
      <pubDate>Thu, 23 Apr 2020 15:47:40 +0200</pubDate>
      
      <guid>https://bonkowski.net/posts/ios-azure-pipeline/</guid>
      <description>Update (May 7, 2020) ðŸ”—It seems that what I described below is not necessary if you use https for getting your dependencies.
I got the task of setting up a build pipeline for an iOS project using Azure DevOps. By following the documentation, this was easy to set up a dummy project without any dependencies. If you are using CocoaPod or Carthage for dependency management, you&amp;rsquo;ll find tasks that support this out of the box.</description>
    </item>
    
    <item>
      <title>Serverside Swift</title>
      <link>https://bonkowski.net/posts/serverside-swift/</link>
      <pubDate>Wed, 03 Jul 2019 17:54:10 +0200</pubDate>
      
      <guid>https://bonkowski.net/posts/serverside-swift/</guid>
      <description>I came over this article today, which got my attention since I spent a few hours yesterday evening to see what options we currently have for Swift on the backend. I like the idea since Swift is a very nice programming language.
The project I wanted to use to explore Swift on the server-side is to replicate the functionality we already got in a &amp;ldquo;mock-server&amp;rdquo; written in Go. This server simulates most of the features that our production servers provide, which helps us when developing our iOS and Android apps.</description>
    </item>
    
    <item>
      <title>Yesql, Oracle and fetch out of sequence</title>
      <link>https://bonkowski.net/posts/yesql-oracle-and-fetch-out-of-sequence/</link>
      <pubDate>Fri, 28 Oct 2016 22:08:46 +0200</pubDate>
      
      <guid>https://bonkowski.net/posts/yesql-oracle-and-fetch-out-of-sequence/</guid>
      <description>If you encounter an â€˜ORA-01002: fetch out of sequenceâ€™ when running your Yesql functions, make sure you have remembered the exclamation mark after the name of your insert/update/delete. I have only used Oracle with Yesql, but I expect other databases will give a similar error if you forget this.</description>
    </item>
    
    <item>
      <title>Refactoring in AppCode</title>
      <link>https://bonkowski.net/posts/refactoring-in-appcode/</link>
      <pubDate>Sun, 10 Feb 2013 23:19:00 +0200</pubDate>
      
      <guid>https://bonkowski.net/posts/refactoring-in-appcode/</guid>
      <description>AppCode offers a rich set of refactoring&amp;rsquo;s, which is fast, safe, and easy to use.
Rename ðŸ”—Naming is surprisingly difficult. It&amp;rsquo;s easy to get &amp;ldquo;paralyzed&amp;rdquo; if the perfect name of a class or method does not pops into place immediately. But hey, you can always rename it later!
The &amp;ldquo;Rename&amp;rdquo; refactoring in AppCode is triggered by the shortcut â‡§F6. By using this, you can rename a file, class, method, property, ivar, local variable, and so on.</description>
    </item>
    
    <item>
      <title>Navigation in AppCode (EAP)</title>
      <link>https://bonkowski.net/posts/navigation-in-appcode/</link>
      <pubDate>Mon, 21 Jan 2013 21:32:00 +0200</pubDate>
      
      <guid>https://bonkowski.net/posts/navigation-in-appcode/</guid>
      <description>Xcode ðŸ”—My first meeting with Xcode, which was version 3 something, did not impress me. A couple of years later, Xcode 4 was presented at WWDC 2010, and while my first impression was positive, this feeling was short lived. It crashed continually, and while it looked good, which it still does, the editing experience and feature set were far below my expectations for a modern IDE.
JetBrains ðŸ”—I know that more than 10 years experience with IDE&amp;rsquo;s from JetBrains, such as IntelliJ and RubyMine, does something with your expectations of what an IDE should provide.</description>
    </item>
    
  </channel>
</rss>
